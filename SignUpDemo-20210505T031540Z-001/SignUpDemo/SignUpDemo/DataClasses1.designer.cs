#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SignUpDemo
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="boutique")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Définitions de méthodes d'extensibilité
    partial void OnCreated();
    partial void Inserttype_fournisseur(type_fournisseur instance);
    partial void Updatetype_fournisseur(type_fournisseur instance);
    partial void Deletetype_fournisseur(type_fournisseur instance);
    partial void Insertpannier(pannier instance);
    partial void Updatepannier(pannier instance);
    partial void Deletepannier(pannier instance);
    partial void Insertnum_fournisseur(num_fournisseur instance);
    partial void Updatenum_fournisseur(num_fournisseur instance);
    partial void Deletenum_fournisseur(num_fournisseur instance);
    partial void Insertliste_email(liste_email instance);
    partial void Updateliste_email(liste_email instance);
    partial void Deleteliste_email(liste_email instance);
    partial void Insertjouet(jouet instance);
    partial void Updatejouet(jouet instance);
    partial void Deletejouet(jouet instance);
    partial void Insertfournisseur(fournisseur instance);
    partial void Updatefournisseur(fournisseur instance);
    partial void Deletefournisseur(fournisseur instance);
    partial void Insertfacture_jouet(facture_jouet instance);
    partial void Updatefacture_jouet(facture_jouet instance);
    partial void Deletefacture_jouet(facture_jouet instance);
    partial void InsertFacture(Facture instance);
    partial void UpdateFacture(Facture instance);
    partial void DeleteFacture(Facture instance);
    partial void Insertclient(client instance);
    partial void Updateclient(client instance);
    partial void Deleteclient(client instance);
    partial void Insertcaissier(caissier instance);
    partial void Updatecaissier(caissier instance);
    partial void Deletecaissier(caissier instance);
    partial void Insertadministrateur(administrateur instance);
    partial void Updateadministrateur(administrateur instance);
    partial void Deleteadministrateur(administrateur instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::SignUpDemo.Properties.Settings.Default.boutiqueConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<type_fournisseur> type_fournisseur
		{
			get
			{
				return this.GetTable<type_fournisseur>();
			}
		}
		
		public System.Data.Linq.Table<pannier> pannier
		{
			get
			{
				return this.GetTable<pannier>();
			}
		}
		
		public System.Data.Linq.Table<num_fournisseur> num_fournisseur
		{
			get
			{
				return this.GetTable<num_fournisseur>();
			}
		}
		
		public System.Data.Linq.Table<liste_email> liste_email
		{
			get
			{
				return this.GetTable<liste_email>();
			}
		}
		
		public System.Data.Linq.Table<jouet> jouet
		{
			get
			{
				return this.GetTable<jouet>();
			}
		}
		
		public System.Data.Linq.Table<fournisseur> fournisseur
		{
			get
			{
				return this.GetTable<fournisseur>();
			}
		}
		
		public System.Data.Linq.Table<facture_jouet> facture_jouet
		{
			get
			{
				return this.GetTable<facture_jouet>();
			}
		}
		
		public System.Data.Linq.Table<Facture> Facture
		{
			get
			{
				return this.GetTable<Facture>();
			}
		}
		
		public System.Data.Linq.Table<client> client
		{
			get
			{
				return this.GetTable<client>();
			}
		}
		
		public System.Data.Linq.Table<caissier> caissier
		{
			get
			{
				return this.GetTable<caissier>();
			}
		}
		
		public System.Data.Linq.Table<administrateur> administrateur
		{
			get
			{
				return this.GetTable<administrateur>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.type_fournisseur")]
	public partial class type_fournisseur : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_four;
		
		private string _type;
		
		private EntityRef<fournisseur> _fournisseur;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_fourChanging(int value);
    partial void OnId_fourChanged();
    partial void OntypeChanging(string value);
    partial void OntypeChanged();
    #endregion
		
		public type_fournisseur()
		{
			this._fournisseur = default(EntityRef<fournisseur>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_four", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_four
		{
			get
			{
				return this._Id_four;
			}
			set
			{
				if ((this._Id_four != value))
				{
					if (this._fournisseur.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_fourChanging(value);
					this.SendPropertyChanging();
					this._Id_four = value;
					this.SendPropertyChanged("Id_four");
					this.OnId_fourChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_type", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string type
		{
			get
			{
				return this._type;
			}
			set
			{
				if ((this._type != value))
				{
					this.OntypeChanging(value);
					this.SendPropertyChanging();
					this._type = value;
					this.SendPropertyChanged("type");
					this.OntypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="fournisseur_type_fournisseur", Storage="_fournisseur", ThisKey="Id_four", OtherKey="id", IsForeignKey=true)]
		public fournisseur fournisseur
		{
			get
			{
				return this._fournisseur.Entity;
			}
			set
			{
				fournisseur previousValue = this._fournisseur.Entity;
				if (((previousValue != value) 
							|| (this._fournisseur.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._fournisseur.Entity = null;
						previousValue.type_fournisseur.Remove(this);
					}
					this._fournisseur.Entity = value;
					if ((value != null))
					{
						value.type_fournisseur.Add(this);
						this._Id_four = value.id;
					}
					else
					{
						this._Id_four = default(int);
					}
					this.SendPropertyChanged("fournisseur");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.pannier")]
	public partial class pannier : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_cmd;
		
		private string _id_client;
		
		private int _id_jouet;
		
		private int _quantite;
		
		private EntityRef<jouet> _jouet;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_cmdChanging(int value);
    partial void Onid_cmdChanged();
    partial void Onid_clientChanging(string value);
    partial void Onid_clientChanged();
    partial void Onid_jouetChanging(int value);
    partial void Onid_jouetChanged();
    partial void OnquantiteChanging(int value);
    partial void OnquantiteChanged();
    #endregion
		
		public pannier()
		{
			this._jouet = default(EntityRef<jouet>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_cmd", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_cmd
		{
			get
			{
				return this._id_cmd;
			}
			set
			{
				if ((this._id_cmd != value))
				{
					this.Onid_cmdChanging(value);
					this.SendPropertyChanging();
					this._id_cmd = value;
					this.SendPropertyChanged("id_cmd");
					this.Onid_cmdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_client", DbType="VarChar(40) NOT NULL", CanBeNull=false)]
		public string id_client
		{
			get
			{
				return this._id_client;
			}
			set
			{
				if ((this._id_client != value))
				{
					this.Onid_clientChanging(value);
					this.SendPropertyChanging();
					this._id_client = value;
					this.SendPropertyChanged("id_client");
					this.Onid_clientChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_jouet", DbType="Int NOT NULL")]
		public int id_jouet
		{
			get
			{
				return this._id_jouet;
			}
			set
			{
				if ((this._id_jouet != value))
				{
					if (this._jouet.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_jouetChanging(value);
					this.SendPropertyChanging();
					this._id_jouet = value;
					this.SendPropertyChanged("id_jouet");
					this.Onid_jouetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_quantite", DbType="Int NOT NULL")]
		public int quantite
		{
			get
			{
				return this._quantite;
			}
			set
			{
				if ((this._quantite != value))
				{
					this.OnquantiteChanging(value);
					this.SendPropertyChanging();
					this._quantite = value;
					this.SendPropertyChanged("quantite");
					this.OnquantiteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="jouet_pannier", Storage="_jouet", ThisKey="id_jouet", OtherKey="id", IsForeignKey=true)]
		public jouet jouet
		{
			get
			{
				return this._jouet.Entity;
			}
			set
			{
				jouet previousValue = this._jouet.Entity;
				if (((previousValue != value) 
							|| (this._jouet.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._jouet.Entity = null;
						previousValue.pannier.Remove(this);
					}
					this._jouet.Entity = value;
					if ((value != null))
					{
						value.pannier.Add(this);
						this._id_jouet = value.id;
					}
					else
					{
						this._id_jouet = default(int);
					}
					this.SendPropertyChanged("jouet");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.num_fournisseur")]
	public partial class num_fournisseur : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_four;
		
		private string _num_tel;
		
		private EntityRef<fournisseur> _fournisseur;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_fourChanging(int value);
    partial void OnId_fourChanged();
    partial void Onnum_telChanging(string value);
    partial void Onnum_telChanged();
    #endregion
		
		public num_fournisseur()
		{
			this._fournisseur = default(EntityRef<fournisseur>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_four", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_four
		{
			get
			{
				return this._Id_four;
			}
			set
			{
				if ((this._Id_four != value))
				{
					if (this._fournisseur.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_fourChanging(value);
					this.SendPropertyChanging();
					this._Id_four = value;
					this.SendPropertyChanged("Id_four");
					this.OnId_fourChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_num_tel", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string num_tel
		{
			get
			{
				return this._num_tel;
			}
			set
			{
				if ((this._num_tel != value))
				{
					this.Onnum_telChanging(value);
					this.SendPropertyChanging();
					this._num_tel = value;
					this.SendPropertyChanged("num_tel");
					this.Onnum_telChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="fournisseur_num_fournisseur", Storage="_fournisseur", ThisKey="Id_four", OtherKey="id", IsForeignKey=true)]
		public fournisseur fournisseur
		{
			get
			{
				return this._fournisseur.Entity;
			}
			set
			{
				fournisseur previousValue = this._fournisseur.Entity;
				if (((previousValue != value) 
							|| (this._fournisseur.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._fournisseur.Entity = null;
						previousValue.num_fournisseur.Remove(this);
					}
					this._fournisseur.Entity = value;
					if ((value != null))
					{
						value.num_fournisseur.Add(this);
						this._Id_four = value.id;
					}
					else
					{
						this._Id_four = default(int);
					}
					this.SendPropertyChanged("fournisseur");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.liste_email")]
	public partial class liste_email : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _email;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    #endregion
		
		public liste_email()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(50)")]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.jouet")]
	public partial class jouet : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _nom;
		
		private string _type;
		
		private int _agemin;
		
		private int _agemax;
		
		private string _photo;
		
		private double _prix;
		
		private int _id_fournisseur;
		
		private int _stock;
		
		private EntitySet<pannier> _pannier;
		
		private EntitySet<facture_jouet> _facture_jouet;
		
		private EntityRef<fournisseur> _fournisseur;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnomChanging(string value);
    partial void OnnomChanged();
    partial void OntypeChanging(string value);
    partial void OntypeChanged();
    partial void OnageminChanging(int value);
    partial void OnageminChanged();
    partial void OnagemaxChanging(int value);
    partial void OnagemaxChanged();
    partial void OnphotoChanging(string value);
    partial void OnphotoChanged();
    partial void OnprixChanging(double value);
    partial void OnprixChanged();
    partial void Onid_fournisseurChanging(int value);
    partial void Onid_fournisseurChanged();
    partial void OnstockChanging(int value);
    partial void OnstockChanged();
    #endregion
		
		public jouet()
		{
			this._pannier = new EntitySet<pannier>(new Action<pannier>(this.attach_pannier), new Action<pannier>(this.detach_pannier));
			this._facture_jouet = new EntitySet<facture_jouet>(new Action<facture_jouet>(this.attach_facture_jouet), new Action<facture_jouet>(this.detach_facture_jouet));
			this._fournisseur = default(EntityRef<fournisseur>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nom", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string nom
		{
			get
			{
				return this._nom;
			}
			set
			{
				if ((this._nom != value))
				{
					this.OnnomChanging(value);
					this.SendPropertyChanging();
					this._nom = value;
					this.SendPropertyChanged("nom");
					this.OnnomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_type", DbType="VarChar(33) NOT NULL", CanBeNull=false)]
		public string type
		{
			get
			{
				return this._type;
			}
			set
			{
				if ((this._type != value))
				{
					this.OntypeChanging(value);
					this.SendPropertyChanging();
					this._type = value;
					this.SendPropertyChanged("type");
					this.OntypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_agemin", DbType="Int NOT NULL")]
		public int agemin
		{
			get
			{
				return this._agemin;
			}
			set
			{
				if ((this._agemin != value))
				{
					this.OnageminChanging(value);
					this.SendPropertyChanging();
					this._agemin = value;
					this.SendPropertyChanged("agemin");
					this.OnageminChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_agemax", DbType="Int NOT NULL")]
		public int agemax
		{
			get
			{
				return this._agemax;
			}
			set
			{
				if ((this._agemax != value))
				{
					this.OnagemaxChanging(value);
					this.SendPropertyChanging();
					this._agemax = value;
					this.SendPropertyChanged("agemax");
					this.OnagemaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_photo", DbType="VarChar(90)")]
		public string photo
		{
			get
			{
				return this._photo;
			}
			set
			{
				if ((this._photo != value))
				{
					this.OnphotoChanging(value);
					this.SendPropertyChanging();
					this._photo = value;
					this.SendPropertyChanged("photo");
					this.OnphotoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_prix", DbType="Float NOT NULL")]
		public double prix
		{
			get
			{
				return this._prix;
			}
			set
			{
				if ((this._prix != value))
				{
					this.OnprixChanging(value);
					this.SendPropertyChanging();
					this._prix = value;
					this.SendPropertyChanged("prix");
					this.OnprixChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_fournisseur", DbType="Int NOT NULL")]
		public int id_fournisseur
		{
			get
			{
				return this._id_fournisseur;
			}
			set
			{
				if ((this._id_fournisseur != value))
				{
					if (this._fournisseur.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_fournisseurChanging(value);
					this.SendPropertyChanging();
					this._id_fournisseur = value;
					this.SendPropertyChanged("id_fournisseur");
					this.Onid_fournisseurChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stock", DbType="Int NOT NULL")]
		public int stock
		{
			get
			{
				return this._stock;
			}
			set
			{
				if ((this._stock != value))
				{
					this.OnstockChanging(value);
					this.SendPropertyChanging();
					this._stock = value;
					this.SendPropertyChanged("stock");
					this.OnstockChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="jouet_pannier", Storage="_pannier", ThisKey="id", OtherKey="id_jouet")]
		public EntitySet<pannier> pannier
		{
			get
			{
				return this._pannier;
			}
			set
			{
				this._pannier.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="jouet_facture_jouet", Storage="_facture_jouet", ThisKey="id", OtherKey="id_jouet")]
		public EntitySet<facture_jouet> facture_jouet
		{
			get
			{
				return this._facture_jouet;
			}
			set
			{
				this._facture_jouet.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="fournisseur_jouet", Storage="_fournisseur", ThisKey="id_fournisseur", OtherKey="id", IsForeignKey=true)]
		public fournisseur fournisseur
		{
			get
			{
				return this._fournisseur.Entity;
			}
			set
			{
				fournisseur previousValue = this._fournisseur.Entity;
				if (((previousValue != value) 
							|| (this._fournisseur.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._fournisseur.Entity = null;
						previousValue.jouet.Remove(this);
					}
					this._fournisseur.Entity = value;
					if ((value != null))
					{
						value.jouet.Add(this);
						this._id_fournisseur = value.id;
					}
					else
					{
						this._id_fournisseur = default(int);
					}
					this.SendPropertyChanged("fournisseur");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_pannier(pannier entity)
		{
			this.SendPropertyChanging();
			entity.jouet = this;
		}
		
		private void detach_pannier(pannier entity)
		{
			this.SendPropertyChanging();
			entity.jouet = null;
		}
		
		private void attach_facture_jouet(facture_jouet entity)
		{
			this.SendPropertyChanging();
			entity.jouet = this;
		}
		
		private void detach_facture_jouet(facture_jouet entity)
		{
			this.SendPropertyChanging();
			entity.jouet = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.fournisseur")]
	public partial class fournisseur : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _nom;
		
		private string _mail;
		
		private string _adresse;
		
		private EntitySet<type_fournisseur> _type_fournisseur;
		
		private EntitySet<num_fournisseur> _num_fournisseur;
		
		private EntitySet<jouet> _jouet;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnomChanging(string value);
    partial void OnnomChanged();
    partial void OnmailChanging(string value);
    partial void OnmailChanged();
    partial void OnadresseChanging(string value);
    partial void OnadresseChanged();
    #endregion
		
		public fournisseur()
		{
			this._type_fournisseur = new EntitySet<type_fournisseur>(new Action<type_fournisseur>(this.attach_type_fournisseur), new Action<type_fournisseur>(this.detach_type_fournisseur));
			this._num_fournisseur = new EntitySet<num_fournisseur>(new Action<num_fournisseur>(this.attach_num_fournisseur), new Action<num_fournisseur>(this.detach_num_fournisseur));
			this._jouet = new EntitySet<jouet>(new Action<jouet>(this.attach_jouet), new Action<jouet>(this.detach_jouet));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nom", DbType="VarChar(40)")]
		public string nom
		{
			get
			{
				return this._nom;
			}
			set
			{
				if ((this._nom != value))
				{
					this.OnnomChanging(value);
					this.SendPropertyChanging();
					this._nom = value;
					this.SendPropertyChanged("nom");
					this.OnnomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mail", DbType="VarChar(50)")]
		public string mail
		{
			get
			{
				return this._mail;
			}
			set
			{
				if ((this._mail != value))
				{
					this.OnmailChanging(value);
					this.SendPropertyChanging();
					this._mail = value;
					this.SendPropertyChanged("mail");
					this.OnmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_adresse", DbType="VarChar(50)")]
		public string adresse
		{
			get
			{
				return this._adresse;
			}
			set
			{
				if ((this._adresse != value))
				{
					this.OnadresseChanging(value);
					this.SendPropertyChanging();
					this._adresse = value;
					this.SendPropertyChanged("adresse");
					this.OnadresseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="fournisseur_type_fournisseur", Storage="_type_fournisseur", ThisKey="id", OtherKey="Id_four")]
		public EntitySet<type_fournisseur> type_fournisseur
		{
			get
			{
				return this._type_fournisseur;
			}
			set
			{
				this._type_fournisseur.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="fournisseur_num_fournisseur", Storage="_num_fournisseur", ThisKey="id", OtherKey="Id_four")]
		public EntitySet<num_fournisseur> num_fournisseur
		{
			get
			{
				return this._num_fournisseur;
			}
			set
			{
				this._num_fournisseur.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="fournisseur_jouet", Storage="_jouet", ThisKey="id", OtherKey="id_fournisseur")]
		public EntitySet<jouet> jouet
		{
			get
			{
				return this._jouet;
			}
			set
			{
				this._jouet.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_type_fournisseur(type_fournisseur entity)
		{
			this.SendPropertyChanging();
			entity.fournisseur = this;
		}
		
		private void detach_type_fournisseur(type_fournisseur entity)
		{
			this.SendPropertyChanging();
			entity.fournisseur = null;
		}
		
		private void attach_num_fournisseur(num_fournisseur entity)
		{
			this.SendPropertyChanging();
			entity.fournisseur = this;
		}
		
		private void detach_num_fournisseur(num_fournisseur entity)
		{
			this.SendPropertyChanging();
			entity.fournisseur = null;
		}
		
		private void attach_jouet(jouet entity)
		{
			this.SendPropertyChanging();
			entity.fournisseur = this;
		}
		
		private void detach_jouet(jouet entity)
		{
			this.SendPropertyChanging();
			entity.fournisseur = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.facture_jouet")]
	public partial class facture_jouet : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_fact;
		
		private int _id_jouet;
		
		private int _quantite;
		
		private EntityRef<jouet> _jouet;
		
		private EntityRef<Facture> _Facture;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_factChanging(int value);
    partial void OnId_factChanged();
    partial void Onid_jouetChanging(int value);
    partial void Onid_jouetChanged();
    partial void OnquantiteChanging(int value);
    partial void OnquantiteChanged();
    #endregion
		
		public facture_jouet()
		{
			this._jouet = default(EntityRef<jouet>);
			this._Facture = default(EntityRef<Facture>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_fact", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_fact
		{
			get
			{
				return this._Id_fact;
			}
			set
			{
				if ((this._Id_fact != value))
				{
					if (this._Facture.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_factChanging(value);
					this.SendPropertyChanging();
					this._Id_fact = value;
					this.SendPropertyChanged("Id_fact");
					this.OnId_factChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_jouet", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id_jouet
		{
			get
			{
				return this._id_jouet;
			}
			set
			{
				if ((this._id_jouet != value))
				{
					if (this._jouet.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_jouetChanging(value);
					this.SendPropertyChanging();
					this._id_jouet = value;
					this.SendPropertyChanged("id_jouet");
					this.Onid_jouetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_quantite", DbType="Int NOT NULL")]
		public int quantite
		{
			get
			{
				return this._quantite;
			}
			set
			{
				if ((this._quantite != value))
				{
					this.OnquantiteChanging(value);
					this.SendPropertyChanging();
					this._quantite = value;
					this.SendPropertyChanged("quantite");
					this.OnquantiteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="jouet_facture_jouet", Storage="_jouet", ThisKey="id_jouet", OtherKey="id", IsForeignKey=true)]
		public jouet jouet
		{
			get
			{
				return this._jouet.Entity;
			}
			set
			{
				jouet previousValue = this._jouet.Entity;
				if (((previousValue != value) 
							|| (this._jouet.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._jouet.Entity = null;
						previousValue.facture_jouet.Remove(this);
					}
					this._jouet.Entity = value;
					if ((value != null))
					{
						value.facture_jouet.Add(this);
						this._id_jouet = value.id;
					}
					else
					{
						this._id_jouet = default(int);
					}
					this.SendPropertyChanged("jouet");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Facture_facture_jouet", Storage="_Facture", ThisKey="Id_fact", OtherKey="Id", IsForeignKey=true)]
		public Facture Facture
		{
			get
			{
				return this._Facture.Entity;
			}
			set
			{
				Facture previousValue = this._Facture.Entity;
				if (((previousValue != value) 
							|| (this._Facture.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Facture.Entity = null;
						previousValue.facture_jouet.Remove(this);
					}
					this._Facture.Entity = value;
					if ((value != null))
					{
						value.facture_jouet.Add(this);
						this._Id_fact = value.Id;
					}
					else
					{
						this._Id_fact = default(int);
					}
					this.SendPropertyChanged("Facture");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Facture")]
	public partial class Facture : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.DateTime _date;
		
		private string _login_caissier;
		
		private string _login_client;
		
		private string _situation;
		
		private EntitySet<facture_jouet> _facture_jouet;
		
		private EntityRef<client> _client;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OndateChanging(System.DateTime value);
    partial void OndateChanged();
    partial void Onlogin_caissierChanging(string value);
    partial void Onlogin_caissierChanged();
    partial void Onlogin_clientChanging(string value);
    partial void Onlogin_clientChanged();
    partial void OnsituationChanging(string value);
    partial void OnsituationChanged();
    #endregion
		
		public Facture()
		{
			this._facture_jouet = new EntitySet<facture_jouet>(new Action<facture_jouet>(this.attach_facture_jouet), new Action<facture_jouet>(this.detach_facture_jouet));
			this._client = default(EntityRef<client>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="Date NOT NULL")]
		public System.DateTime date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this.OndateChanging(value);
					this.SendPropertyChanging();
					this._date = value;
					this.SendPropertyChanged("date");
					this.OndateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_login_caissier", DbType="VarChar(40) NOT NULL", CanBeNull=false)]
		public string login_caissier
		{
			get
			{
				return this._login_caissier;
			}
			set
			{
				if ((this._login_caissier != value))
				{
					this.Onlogin_caissierChanging(value);
					this.SendPropertyChanging();
					this._login_caissier = value;
					this.SendPropertyChanged("login_caissier");
					this.Onlogin_caissierChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_login_client", DbType="VarChar(40)")]
		public string login_client
		{
			get
			{
				return this._login_client;
			}
			set
			{
				if ((this._login_client != value))
				{
					if (this._client.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onlogin_clientChanging(value);
					this.SendPropertyChanging();
					this._login_client = value;
					this.SendPropertyChanged("login_client");
					this.Onlogin_clientChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_situation", DbType="VarChar(50)")]
		public string situation
		{
			get
			{
				return this._situation;
			}
			set
			{
				if ((this._situation != value))
				{
					this.OnsituationChanging(value);
					this.SendPropertyChanging();
					this._situation = value;
					this.SendPropertyChanged("situation");
					this.OnsituationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Facture_facture_jouet", Storage="_facture_jouet", ThisKey="Id", OtherKey="Id_fact")]
		public EntitySet<facture_jouet> facture_jouet
		{
			get
			{
				return this._facture_jouet;
			}
			set
			{
				this._facture_jouet.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="client_Facture", Storage="_client", ThisKey="login_client", OtherKey="login", IsForeignKey=true)]
		public client client
		{
			get
			{
				return this._client.Entity;
			}
			set
			{
				client previousValue = this._client.Entity;
				if (((previousValue != value) 
							|| (this._client.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._client.Entity = null;
						previousValue.Facture.Remove(this);
					}
					this._client.Entity = value;
					if ((value != null))
					{
						value.Facture.Add(this);
						this._login_client = value.login;
					}
					else
					{
						this._login_client = default(string);
					}
					this.SendPropertyChanged("client");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_facture_jouet(facture_jouet entity)
		{
			this.SendPropertyChanging();
			entity.Facture = this;
		}
		
		private void detach_facture_jouet(facture_jouet entity)
		{
			this.SendPropertyChanging();
			entity.Facture = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.client")]
	public partial class client : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _mail;
		
		private string _nom;
		
		private string _prenom;
		
		private string _login;
		
		private string _motdepasse;
		
		private EntitySet<Facture> _Facture;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnmailChanging(string value);
    partial void OnmailChanged();
    partial void OnnomChanging(string value);
    partial void OnnomChanged();
    partial void OnprenomChanging(string value);
    partial void OnprenomChanged();
    partial void OnloginChanging(string value);
    partial void OnloginChanged();
    partial void OnmotdepasseChanging(string value);
    partial void OnmotdepasseChanged();
    #endregion
		
		public client()
		{
			this._Facture = new EntitySet<Facture>(new Action<Facture>(this.attach_Facture), new Action<Facture>(this.detach_Facture));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mail", DbType="VarChar(40) NOT NULL", CanBeNull=false)]
		public string mail
		{
			get
			{
				return this._mail;
			}
			set
			{
				if ((this._mail != value))
				{
					this.OnmailChanging(value);
					this.SendPropertyChanging();
					this._mail = value;
					this.SendPropertyChanged("mail");
					this.OnmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nom", DbType="VarChar(40) NOT NULL", CanBeNull=false)]
		public string nom
		{
			get
			{
				return this._nom;
			}
			set
			{
				if ((this._nom != value))
				{
					this.OnnomChanging(value);
					this.SendPropertyChanging();
					this._nom = value;
					this.SendPropertyChanged("nom");
					this.OnnomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_prenom", DbType="VarChar(40) NOT NULL", CanBeNull=false)]
		public string prenom
		{
			get
			{
				return this._prenom;
			}
			set
			{
				if ((this._prenom != value))
				{
					this.OnprenomChanging(value);
					this.SendPropertyChanging();
					this._prenom = value;
					this.SendPropertyChanged("prenom");
					this.OnprenomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_login", DbType="VarChar(40) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string login
		{
			get
			{
				return this._login;
			}
			set
			{
				if ((this._login != value))
				{
					this.OnloginChanging(value);
					this.SendPropertyChanging();
					this._login = value;
					this.SendPropertyChanged("login");
					this.OnloginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_motdepasse", DbType="VarChar(40) NOT NULL", CanBeNull=false)]
		public string motdepasse
		{
			get
			{
				return this._motdepasse;
			}
			set
			{
				if ((this._motdepasse != value))
				{
					this.OnmotdepasseChanging(value);
					this.SendPropertyChanging();
					this._motdepasse = value;
					this.SendPropertyChanged("motdepasse");
					this.OnmotdepasseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="client_Facture", Storage="_Facture", ThisKey="login", OtherKey="login_client")]
		public EntitySet<Facture> Facture
		{
			get
			{
				return this._Facture;
			}
			set
			{
				this._Facture.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Facture(Facture entity)
		{
			this.SendPropertyChanging();
			entity.client = this;
		}
		
		private void detach_Facture(Facture entity)
		{
			this.SendPropertyChanging();
			entity.client = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.caissier")]
	public partial class caissier : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _login;
		
		private string _password;
		
		private System.Data.Linq.Binary _photo;
		
		private string _nom;
		
		private string _prenom;
		
		private string _numero_teleph;
		
		private string _numero_securite;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnloginChanging(string value);
    partial void OnloginChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void OnphotoChanging(System.Data.Linq.Binary value);
    partial void OnphotoChanged();
    partial void OnnomChanging(string value);
    partial void OnnomChanged();
    partial void OnprenomChanging(string value);
    partial void OnprenomChanged();
    partial void Onnumero_telephChanging(string value);
    partial void Onnumero_telephChanged();
    partial void Onnumero_securiteChanging(string value);
    partial void Onnumero_securiteChanged();
    #endregion
		
		public caissier()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_login", DbType="VarChar(40) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string login
		{
			get
			{
				return this._login;
			}
			set
			{
				if ((this._login != value))
				{
					this.OnloginChanging(value);
					this.SendPropertyChanging();
					this._login = value;
					this.SendPropertyChanged("login");
					this.OnloginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_photo", DbType="Image NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary photo
		{
			get
			{
				return this._photo;
			}
			set
			{
				if ((this._photo != value))
				{
					this.OnphotoChanging(value);
					this.SendPropertyChanging();
					this._photo = value;
					this.SendPropertyChanged("photo");
					this.OnphotoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nom", DbType="VarChar(40) NOT NULL", CanBeNull=false)]
		public string nom
		{
			get
			{
				return this._nom;
			}
			set
			{
				if ((this._nom != value))
				{
					this.OnnomChanging(value);
					this.SendPropertyChanging();
					this._nom = value;
					this.SendPropertyChanged("nom");
					this.OnnomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_prenom", DbType="VarChar(40) NOT NULL", CanBeNull=false)]
		public string prenom
		{
			get
			{
				return this._prenom;
			}
			set
			{
				if ((this._prenom != value))
				{
					this.OnprenomChanging(value);
					this.SendPropertyChanging();
					this._prenom = value;
					this.SendPropertyChanged("prenom");
					this.OnprenomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_numero_teleph", DbType="VarChar(50)")]
		public string numero_teleph
		{
			get
			{
				return this._numero_teleph;
			}
			set
			{
				if ((this._numero_teleph != value))
				{
					this.Onnumero_telephChanging(value);
					this.SendPropertyChanging();
					this._numero_teleph = value;
					this.SendPropertyChanged("numero_teleph");
					this.Onnumero_telephChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_numero_securite", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string numero_securite
		{
			get
			{
				return this._numero_securite;
			}
			set
			{
				if ((this._numero_securite != value))
				{
					this.Onnumero_securiteChanging(value);
					this.SendPropertyChanging();
					this._numero_securite = value;
					this.SendPropertyChanged("numero_securite");
					this.Onnumero_securiteChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.administrateur")]
	public partial class administrateur : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _login;
		
		private string _password;
		
		private string _adresse_email;
		
		private System.Data.Linq.Binary _photo;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnloginChanging(string value);
    partial void OnloginChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void Onadresse_emailChanging(string value);
    partial void Onadresse_emailChanged();
    partial void OnphotoChanging(System.Data.Linq.Binary value);
    partial void OnphotoChanged();
    #endregion
		
		public administrateur()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_login", DbType="VarChar(40) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string login
		{
			get
			{
				return this._login;
			}
			set
			{
				if ((this._login != value))
				{
					this.OnloginChanging(value);
					this.SendPropertyChanging();
					this._login = value;
					this.SendPropertyChanged("login");
					this.OnloginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="VarChar(40) NOT NULL", CanBeNull=false)]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_adresse_email", DbType="VarChar(40) NOT NULL", CanBeNull=false)]
		public string adresse_email
		{
			get
			{
				return this._adresse_email;
			}
			set
			{
				if ((this._adresse_email != value))
				{
					this.Onadresse_emailChanging(value);
					this.SendPropertyChanging();
					this._adresse_email = value;
					this.SendPropertyChanged("adresse_email");
					this.Onadresse_emailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_photo", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary photo
		{
			get
			{
				return this._photo;
			}
			set
			{
				if ((this._photo != value))
				{
					this.OnphotoChanging(value);
					this.SendPropertyChanging();
					this._photo = value;
					this.SendPropertyChanged("photo");
					this.OnphotoChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
